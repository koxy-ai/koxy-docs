"use strict";(self.webpackChunkkoxy_docs=self.webpackChunkkoxy_docs||[]).push([[623],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(a),m=r,k=s["".concat(d,".").concat(m)]||s[m]||c[m]||o;return a?n.createElement(k,i(i({ref:t},u),{},{components:a})):n.createElement(k,i({ref:t},u))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[s]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},8521:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_position:3,description:"Update a document data in a collection",slug:"/nodes/data/update"},i="Update data",l={unversionedId:"nodes/Data/Update",id:"nodes/Data/Update",title:"Update data",description:"Update a document data in a collection",source:"@site/docs/nodes/Data/Update.md",sourceDirName:"nodes/Data",slug:"/nodes/data/update",permalink:"/koxy-docs/nodes/data/update",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"Update a document data in a collection",slug:"/nodes/data/update"},sidebar:"tutorialSidebar",previous:{title:"Create data",permalink:"/koxy-docs/nodes/data/create"},next:{title:"Delete data",permalink:"/koxy-docs/nodes/data/delete"}},d={},p=[{value:"Intro",id:"intro",level:2},{value:"How this node works",id:"how-this-node-works",level:2},{value:"Node properties",id:"node-properties",level:2},{value:"Dynamic variables support",id:"dynamic-variables-support",level:2}],u={toc:p},s="wrapper";function c(e){let{components:t,...a}=e;return(0,r.kt)(s,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"update-data"},"Update data"),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"intro"},"Intro"),(0,r.kt)("p",null,"This node is used to update a document in a collection in your Koxy Database."),(0,r.kt)("p",null,"We recommend you read about ",(0,r.kt)("a",{parentName:"p",href:"/koxy-database"},"Koxy Database"),"."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"how-this-node-works"},"How this node works"),(0,r.kt)("p",null,"Currently, this node will replace a document data with the new data you give it."),(0,r.kt)("p",null,"This node will save the updated document data as a response tht can be accessed from other nodes using the ",(0,r.kt)("inlineCode",{parentName:"p"},"koxy.res.{NODE_NAME}")," syntax. the document will be saved as a response like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "updated_document": {\n        "document_id": "ID", // the id of the updated document\n        "document_data": {\n            // the data of the updated document\n        }\n    }\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"node-properties"},"Node properties"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"name"),": node names should be unique and can't be changed.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Collection"),": the collection ID to update the document in.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"document_od"),": the id of document to update.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Document data"),": the updated document data to replace the document data with. should be a valid ",(0,r.kt)("inlineCode",{parentName:"p"},"JSON"),". if left empty will insert an empty object ",(0,r.kt)("inlineCode",{parentName:"p"},"{}"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Next:")," the trigger that the node should call after updating the document. click on the\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"next input"),"\xa0to get a list of available triggers."))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"dynamic-variables-support"},"Dynamic variables support"),(0,r.kt)("p",null,"You can use dynamic variables in the following properties:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"document_id.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Document data."))))}c.isMDXComponent=!0}}]);