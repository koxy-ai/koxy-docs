"use strict";(self.webpackChunkkoxy_docs=self.webpackChunkkoxy_docs||[]).push([[635],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),l=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(i.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),c=l(t),y=o,f=c["".concat(i,".").concat(y)]||c[y]||d[y]||a;return t?r.createElement(f,s(s({ref:n},p),{},{components:t})):r.createElement(f,s({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=y;var u={};for(var i in n)hasOwnProperty.call(n,i)&&(u[i]=n[i]);u.originalType=e,u[c]="string"==typeof e?e:o,s[1]=u;for(var l=2;l<a;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},1656:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>u,toc:()=>l});var r=t(7462),o=(t(7294),t(3905));const a={sidebar_position:5,description:"Run your API flows and functions",slug:"/run-your-api"},s="Run your API flows",u={unversionedId:"Run",id:"Run",title:"Run your API flows",description:"Run your API flows and functions",source:"@site/docs/Run.md",sourceDirName:".",slug:"/run-your-api",permalink:"/koxy-docs/run-your-api",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,description:"Run your API flows and functions",slug:"/run-your-api"},sidebar:"tutorialSidebar",previous:{title:"Loops",permalink:"/koxy-docs/nodes/loops"},next:{title:"Koxy Database",permalink:"/koxy-docs/koxy-database"}},i={},l=[{value:"Javascript",id:"javascript",level:2},{value:"Using Koxy JS",id:"using-koxy-js",level:3},{value:"Using fetch",id:"using-fetch",level:3},{value:"HTTP requests",id:"http-requests",level:2},{value:"Python",id:"python",level:2}],p={toc:l},c="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(c,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"run-your-api-flows"},"Run your API flows"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"The back-end you build using Koxy AI works with any front-end environment, language, or framework."),(0,o.kt)("p",null,"Below We give few examples on how to run your API flows and cloud functions."),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"javascript"},"Javascript"),(0,o.kt)("h3",{id:"using-koxy-js"},"Using Koxy JS"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://npmjs.com/package/koxy-js"},"Install Koxy JS")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import { koxyAPI } from \'koxy-js\';\n\n// Initialize (replace CLOUDSPACE_TOKEN with your Cloudspace token)\nconst api = new koxyAPI("CLOUDSPACE_TOKEN");\n\n// Set request parameters\nconst parameters = {\n   "param1": "value1"\n};\n\n// Set request headers\nconst headers = {\n   "customHeader": "customValue"\n};\n\n// Run API flow (replace "main" with the flow name you want to run)\nconst data = await api.run("main", parameters, headers);\n\n// Run cloud function\nconst functionData = await api.runFunction("function_name");\n')),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"using-fetch"},"Using fetch"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const url = "https://koxy-cloud.deno.dev";\n\nconst options = {\n   method: "POST",\n   headers: {\n      "Content-Type": "application/json",\n      "Authorization": CLOUDSPACE_TOKEN\n   },\n   body: JSON.stringify({\n      flow: "main",\n      parameters: {"param1": "value1"} // send your own parameters\n   })\n};\n\nfetch(url, options)\n   .then(response => response.json())\n   .then(response => console.log(response))\n   .catch(err => console.error(err));\n')),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"http-requests"},"HTTP requests"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl -i -X POST https://koxy-cloud.deno.dev \\\n-H \'Authorization: CLOUDSPACE_TOKEN\' \\\n-H \'Content-Type: application/json\' \\\n--data \'{"flow": "main", "parameters": \'{"param1": "value1"}\'}\'\n')),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import requests\n\nurl = "https://koxy-cloud.deno.dev"\n\nheaders = {\n   "Content-Type": "application/json",\n   "Authorization": CLOUDSPACE_TOKEN\n}\n\ndata = {\n   "flow": "main",\n   "parameters": {"param1": "value1"}  # send your own parameters\n}\n\nresponse = requests.post(url, headers=headers, data=json.dumps(data))\n\nif response.status_code == 200:\n   print(response.json())\nelse:\n   print(response.status_code)\n')))}d.isMDXComponent=!0}}]);