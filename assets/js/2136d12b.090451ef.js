"use strict";(self.webpackChunkkoxy_docs=self.webpackChunkkoxy_docs||[]).push([[231],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(n),c=r,k=u["".concat(p,".").concat(c)]||u[c]||m[c]||i;return n?a.createElement(k,o(o({ref:t},d),{},{components:n})):a.createElement(k,o({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9211:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:1,description:"condition expressions",slug:"/nodes/core/conditions"},o="Boolean Conditions",l={unversionedId:"nodes/core/Boolean conditions",id:"nodes/core/Boolean conditions",title:"Boolean Conditions",description:"condition expressions",source:"@site/docs/nodes/core/Boolean conditions.md",sourceDirName:"nodes/core",slug:"/nodes/core/conditions",permalink:"/koxy-docs/nodes/core/conditions",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"condition expressions",slug:"/nodes/core/conditions"},sidebar:"tutorialSidebar",previous:{title:"Core nodes",permalink:"/koxy-docs/nodes/core"},next:{title:"HTTP Client",permalink:"/koxy-docs/nodes/core/http-client"}},p={},s=[{value:"Intro",id:"intro",level:2},{value:"How this node works",id:"how-this-node-works",level:2},{value:"Node properties",id:"node-properties",level:2},{value:"Valid operands",id:"valid-operands",level:2},{value:"Valid operators",id:"valid-operators",level:2},{value:"Example",id:"example",level:2},{value:"Dynamic variables support",id:"dynamic-variables-support",level:2}],d={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"boolean-conditions"},"Boolean Conditions"),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"intro"},"Intro"),(0,r.kt)("p",null,"The condition node allows you to make decision based on the result of a boolean expression."),(0,r.kt)("p",null,"The conditions node can be used to control your endpoint's path and it's basically used to triggered other nodes."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"how-this-node-works"},"How this node works"),(0,r.kt)("p",null,"this node is will run a boolean expression on the operator and the two operands you give it. it will trigger the ",(0,r.kt)("inlineCode",{parentName:"p"},"next")," trigger if the expression result is ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," and the ",(0,r.kt)("inlineCode",{parentName:"p"},"falseTrigger")," if the expression result is ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"node-properties"},"Node properties"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"name:")," Node names should be unique and can't be changed.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Configuration:")," "),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"#1 value (first operand):")," ",(0,r.kt)("a",{parentName:"p",href:"#valid-operands"},"See valid operands"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Operator:")," ",(0,r.kt)("a",{parentName:"p",href:"#valid-operators"},"See valid operators"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"#2 value (second operand):")," ",(0,r.kt)("a",{parentName:"p",href:"#valid-operands"},"See valid operands"),".")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Next:")," The action that will be triggered if the expression is ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),". click on the ",(0,r.kt)("inlineCode",{parentName:"p"},"next input")," to get a list of available triggers.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"False trigger:")," The action that will be triggered if the expression is ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),". click on the ",(0,r.kt)("inlineCode",{parentName:"p"},"falseTrigger input")," to get a list of available triggers."))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"valid-operands"},"Valid operands"),(0,r.kt)("p",null,"Operands can be any type of data a boolean expression could take including numbers, strings, and boolean values."),(0,r.kt)("p",null,"You can use Dynamic variables as operands too. see ",(0,r.kt)("a",{parentName:"p",href:"/getting-started/dynamic-variables"},"Dynamic variables"),"."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"valid-operators"},"Valid operators"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"=")," will be turned to ",(0,r.kt)("inlineCode",{parentName:"p"},"==="))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"==")," equal")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"===")," strict equal")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"!=")," not equal")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"<")," less than")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},">")," greater than"))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"In this example We will check if 1 is equal to 3 (and it will return ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," obviously)."),(0,r.kt)("p",null,"So first you need to give your node a name, in this example We will name it ",(0,r.kt)("inlineCode",{parentName:"p"},"cond1"),"."),(0,r.kt)("p",null,"Now let's set our configurations:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"We will set the ",(0,r.kt)("inlineCode",{parentName:"p"},"#1 Value")," input as ",(0,r.kt)("inlineCode",{parentName:"p"},"1"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"We will set the ",(0,r.kt)("inlineCode",{parentName:"p"},"operator")," input as ",(0,r.kt)("inlineCode",{parentName:"p"},"==="),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"We will set the ",(0,r.kt)("inlineCode",{parentName:"p"},"#2 Value")," input as ",(0,r.kt)("inlineCode",{parentName:"p"},"3"),"."))),(0,r.kt)("p",null,"It's time to set our triggers:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"We will set the ",(0,r.kt)("inlineCode",{parentName:"p"},"next")," trigger as ",(0,r.kt)("inlineCode",{parentName:"p"},'"node2"')," so the node with the name ",(0,r.kt)("inlineCode",{parentName:"p"},"node2")," will be called if the expression is true.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"We will set the ",(0,r.kt)("inlineCode",{parentName:"p"},"falseTrigger"),"  as ",(0,r.kt)("inlineCode",{parentName:"p"},"stop")," so the flow stops here."))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"dynamic-variables-support"},"Dynamic variables support"),(0,r.kt)("p",null,"You can use ",(0,r.kt)("a",{parentName:"p",href:"/getting-started/dynamic-variables"},"Dynamic variables")," in the following properties:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"operands (",(0,r.kt)("inlineCode",{parentName:"li"},"#1 Value")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"#2 Value"),").")))}m.isMDXComponent=!0}}]);