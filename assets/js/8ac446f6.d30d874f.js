"use strict";(self.webpackChunkkoxy_docs=self.webpackChunkkoxy_docs||[]).push([[859],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),d=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},g=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=d(n),g=r,h=u["".concat(l,".").concat(g)]||u[g]||c[g]||a;return n?o.createElement(h,i(i({ref:t},p),{},{components:n})):o.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var d=2;d<a;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}g.displayName="MDXCreateElement"},8245:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:1,description:"Understand the main concepts of nodes",slug:"/getting-started/nodes/understanding-nodes"},i="Understanding nodes",s={unversionedId:"nodes/Understanding nodes",id:"nodes/Understanding nodes",title:"Understanding nodes",description:"Understand the main concepts of nodes",source:"@site/docs/nodes/Understanding nodes.md",sourceDirName:"nodes",slug:"/getting-started/nodes/understanding-nodes",permalink:"/koxy-docs/getting-started/nodes/understanding-nodes",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Understand the main concepts of nodes",slug:"/getting-started/nodes/understanding-nodes"},sidebar:"tutorialSidebar",previous:{title:"Nodes",permalink:"/koxy-docs/nodes"},next:{title:"Available nodes",permalink:"/koxy-docs/available-nodes"}},l={},d=[{value:"What is a node",id:"what-is-a-node",level:2},{value:"Add a node",id:"add-a-node",level:2},{value:"Edit a node",id:"edit-a-node",level:2},{value:"Triggers",id:"triggers",level:2},{value:"Nodes responses",id:"nodes-responses",level:2},{value:"Delete a node",id:"delete-a-node",level:2}],p={toc:d},u="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"understanding-nodes"},"Understanding nodes"),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"what-is-a-node"},"What is a node"),(0,r.kt)("p",null,"A node is a single action that can be performed in your API endpoint. Each node is a self-contained unit of functionality, and you can connect nodes together to build your API functionality."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"add-a-node"},"Add a node"),(0,r.kt)("p",null,"Go to your cloudspace to start adding nodes to your flow. you can click on the ",(0,r.kt)("strong",{parentName:"p"},"plus icon")," in the bottom-right corner to open a list of all available nodes to add from, once the ",(0,r.kt)("inlineCode",{parentName:"p"},"nodes list")," is open you can choose any node you want to add, configure its options and click on ",(0,r.kt)("strong",{parentName:"p"},"Done"),"."),(0,r.kt)("p",null,"Your endpoint will always start running from the ",(0,r.kt)("inlineCode",{parentName:"p"},"start")," node, so you need to connect your ",(0,r.kt)("inlineCode",{parentName:"p"},"start")," node's ",(0,r.kt)("inlineCode",{parentName:"p"},"next property")," with the first node you want to run in your endpoint."),(0,r.kt)("p",null,"You need to notice few things:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"start")," node will be always built-in with any endpoint you create.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"If you delete the ",(0,r.kt)("inlineCode",{parentName:"p"},"start")," node ,the endpoint won't be readable by our system and your API will break.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"start")," node only has a ",(0,r.kt)("strong",{parentName:"p"},"name")," and a ",(0,r.kt)("strong",{parentName:"p"},"next")," property, to choose how your API endpoint should start you would change the ",(0,r.kt)("inlineCode",{parentName:"p"},"start")," node's ",(0,r.kt)("inlineCode",{parentName:"p"},"next property")," to the trigger you want to start your endpoint from. ",(0,r.kt)("a",{parentName:"p",href:"/getting-started/nodes/understanding-nodes#triggers"},"read more about triggers")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"edit-a-node"},"Edit a node"),(0,r.kt)("p",null,"You will notice that every node has a ",(0,r.kt)("strong",{parentName:"p"},"settings icon"),", if you click on it the configurations editor will open so you can edit your node and then click on ",(0,r.kt)("strong",{parentName:"p"},"Done")," to save your changes."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"triggers"},"Triggers"),(0,r.kt)("p",null,"A trigger is what a node should do after it finish running... this can be another node, ",(0,r.kt)("inlineCode",{parentName:"p"},"stop"),", or another endpoint in your API."),(0,r.kt)("p",null,"There is a number of triggers:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Next"),": The next trigger exists in all nodes, It defines what the node should call after it's done running. if an error happens in the node It will stop and return the error (won't call the next trigger). exceptions:"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Boolean Conditions"),": in boolean conditions nodes, the next trigger will be called only if the condition expression results is ",(0,r.kt)("inlineCode",{parentName:"li"},"true"),". otherwise It will call the false trigger."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"False trigger"),": false triggers only exist in the ",(0,r.kt)("a",{parentName:"p",href:"/nodes/core/conditions"},"boolean conditions nodes")," and they are triggered if the expression result is ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),", otherwise It will trigger the next trigger as any other node.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Loop trigger"),": loop triggers only exist in ",(0,r.kt)("a",{parentName:"p",href:"/nodes/loops"},"loop nodes")," and they define that event (node or endpoint) that the loop should call while mapping over the set of items."))),(0,r.kt)("p",null,"If you set the trigger of a node as another endpoint, the other endpoint will be executed in the same environment and It will share all the previous nodes responses that are saved as a response. see Nodes responses below."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"nodes-responses"},"Nodes responses"),(0,r.kt)("p",null,"When a node finish running, It will save its result as a response that can be accessed from other nodes with the following syntax ",(0,r.kt)("inlineCode",{parentName:"p"},"koxy.res.{NODE_NAME}")," and you can read nested values using dot notation like this: ",(0,r.kt)("inlineCode",{parentName:"p"},"koxy.res.{NODE_NAME.item1}")," ."),(0,r.kt)("p",null,"However, not all nodes support this feature like:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Boolean conditions.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Logs.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Delay.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Loops.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Status.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Create variable."))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"delete-a-node"},"Delete a node"),(0,r.kt)("p",null,"You can delete a node from the ",(0,r.kt)("inlineCode",{parentName:"p"},"navigator")," in the bottom-right corner (the ",(0,r.kt)("strong",{parentName:"p"},"map icon"),")."))}c.isMDXComponent=!0}}]);