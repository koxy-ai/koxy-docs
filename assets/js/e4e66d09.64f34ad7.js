"use strict";(self.webpackChunkkoxy_docs=self.webpackChunkkoxy_docs||[]).push([[726],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=o.createContext({}),l=function(e){var t=o.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return o.createElement(d.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,d=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),h=a,m=u["".concat(d,".").concat(h)]||u[h]||c[h]||r;return n?o.createElement(m,i(i({ref:t},p),{},{components:n})):o.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=h;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},7442:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var o=n(7462),a=(n(7294),n(3905));const r={sidebar_position:1,description:"Understand the main concepts of nodes",slug:"/getting-started/nodes/understanding-nodes"},i="Understanding nodes",s={unversionedId:"Getting Started/nodes/Understanding nodes",id:"Getting Started/nodes/Understanding nodes",title:"Understanding nodes",description:"Understand the main concepts of nodes",source:"@site/docs/Getting Started/nodes/Understanding nodes.md",sourceDirName:"Getting Started/nodes",slug:"/getting-started/nodes/understanding-nodes",permalink:"/getting-started/nodes/understanding-nodes",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Understand the main concepts of nodes",slug:"/getting-started/nodes/understanding-nodes"},sidebar:"tutorialSidebar",previous:{title:"Nodes",permalink:"/getting-started/nodes/available-nodes/core"},next:{title:"Boolean Condition",permalink:"/getting-started/nodes/core/condition"}},d={},l=[{value:"What is a node",id:"what-is-a-node",level:3},{value:"Add a node",id:"add-a-node",level:3},{value:"How nodes work",id:"how-nodes-work",level:3},{value:"Edit a node",id:"edit-a-node",level:3},{value:"Nodes responses",id:"nodes-responses",level:3},{value:"Basic structure",id:"basic-structure",level:3},{value:"Delete a node",id:"delete-a-node",level:3}],p={toc:l},u="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"understanding-nodes"},"Understanding nodes"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"what-is-a-node"},"What is a node"),(0,a.kt)("p",null,"A node is a single action that can be performed in your flow. Your flow is built up of different nodes, each with its own functionality and tasks."),(0,a.kt)("h3",{id:"add-a-node"},"Add a node"),(0,a.kt)("p",null,"Go to your cloudspace's ",(0,a.kt)("a",{parentName:"p",href:"/getting-started/flows"},"flows"),", and open your ",(0,a.kt)("a",{parentName:"p",href:"/getting-started/flows-builder"},"flow's builder")," to start adding nodes to your flow. you can click on the ",(0,a.kt)("strong",{parentName:"p"},"plus icon")," in the top right corner to open a list of all available nodes to add from, once the ",(0,a.kt)("inlineCode",{parentName:"p"},"nodes list")," is open you can choose any node you want to add, configure its options and click on ",(0,a.kt)("strong",{parentName:"p"},"Done"),"."),(0,a.kt)("p",null,"The Koxy simulation system will always start running from the ",(0,a.kt)("inlineCode",{parentName:"p"},"start1")," node, so when you add your first node, so you need to notice few ideas:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"start1")," node will be always built-in with any flow you create.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"If you delete the ",(0,a.kt)("inlineCode",{parentName:"p"},"start1")," node the flow won't be readable by the Koxy simulation system.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"start1")," only has a ",(0,a.kt)("strong",{parentName:"p"},"name")," and a ",(0,a.kt)("strong",{parentName:"p"},"next")," property, to choose how your flow should start you would change the ",(0,a.kt)("inlineCode",{parentName:"p"},"start1"),"'s ",(0,a.kt)("inlineCode",{parentName:"p"},"next")," property to the trigger you want to start your flow from."))),(0,a.kt)("h3",{id:"how-nodes-work"},"How nodes work"),(0,a.kt)("p",null,"Each node in a flow has a name, a type, an icon, a position, and a set of properties. The name of the node is used to identify it in the flow. The type of the node determines what the node does. The properties of the node control how the node behaves. All nodes share the following properties:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"name:")," node names should be unique and can't be changed. This means that you cannot have two nodes with the same name in a flow. If you create a new node with the name of an existing one, it will replace the existing node.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"type:")," defines the node's type (can't be changed).")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"next:")," this property defines the trigger that the node should trigger when it finishes running. It can be a ",(0,a.kt)("inlineCode",{parentName:"p"},"node"),", a flow (syntax: ",(0,a.kt)("inlineCode",{parentName:"p"},"koxy.flow.{FLOW_NAME}"),"), or ",(0,a.kt)("inlineCode",{parentName:"p"},"stop"),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"icon:")," the icon of the node (used by the ",(0,a.kt)("a",{parentName:"p",href:"/getting-started/flows-builder"},"Flows GUI Biulder"),").")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"x:")," the ",(0,a.kt)("inlineCode",{parentName:"p"},"x")," position of the node (used by the ",(0,a.kt)("a",{parentName:"p",href:"/getting-started/flows-builder"},"Flows GUI Biulder"),").")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"y:")," the ",(0,a.kt)("inlineCode",{parentName:"p"},"y")," position of the node (used by the ",(0,a.kt)("a",{parentName:"p",href:"/getting-started/flows-builder"},"Flows GUI Biulder"),")."))),(0,a.kt)("h3",{id:"edit-a-node"},"Edit a node"),(0,a.kt)("p",null,"You will notice that every node has an ",(0,a.kt)("strong",{parentName:"p"},"options icon")," next to its name, if you click on it the configurations editor will open so you can edit your node and then click on ",(0,a.kt)("strong",{parentName:"p"},"Done")," to save your changes."),(0,a.kt)("h3",{id:"nodes-responses"},"Nodes responses"),(0,a.kt)("p",null,"When a nodes finishes running, It will save its result as a response that can be accessed from other nodes with the following syntax ",(0,a.kt)("inlineCode",{parentName:"p"},"koxy.res.{NODE_NAME}"),"."),(0,a.kt)("p",null,"However, not all nodes support this feature like:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Boolean conditions.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Logger.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Delay."))),(0,a.kt)("h3",{id:"basic-structure"},"Basic structure"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},"node_name: {\n    type,\n    icon,\n    next,\n    x,\n    y,\n    // other properties based on the node type\n}\n")),(0,a.kt)("h3",{id:"delete-a-node"},"Delete a node"),(0,a.kt)("p",null,"You can delete a node from the ",(0,a.kt)("inlineCode",{parentName:"p"},"navigator")," in the top-right corner (the ",(0,a.kt)("strong",{parentName:"p"},"edit icon"),")."))}c.isMDXComponent=!0}}]);