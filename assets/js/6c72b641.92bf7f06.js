"use strict";(self.webpackChunkkoxy_docs=self.webpackChunkkoxy_docs||[]).push([[79],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),d=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return o.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=d(n),m=a,h=c["".concat(s,".").concat(m)]||c[m]||p[m]||r;return n?o.createElement(h,i(i({ref:t},u),{},{components:n})):o.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var d=2;d<r;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4918:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var o=n(7462),a=(n(7294),n(3905));const r={sidebar_position:7,description:"Add your own code to your API",slug:"/getting-started/nodes/functions"},i="Functions",l={unversionedId:"Getting Started/nodes/Functions",id:"Getting Started/nodes/Functions",title:"Functions",description:"Add your own code to your API",source:"@site/docs/Getting Started/nodes/Functions.md",sourceDirName:"Getting Started/nodes",slug:"/getting-started/nodes/functions",permalink:"/getting-started/nodes/functions",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,description:"Add your own code to your API",slug:"/getting-started/nodes/functions"},sidebar:"tutorialSidebar",previous:{title:"AI Models",permalink:"/getting-started/nodes/ai-models"},next:{title:"Dynamic Variables",permalink:"/getting-started/dynamic-variables"}},s={},d=[{value:"How this node works",id:"how-this-node-works",level:3},{value:"Add this node to your flow\u200b",id:"add-this-node-to-your-flowdirect-link-to-add-this-node-to-your-flow",level:3},{value:"How to write your functions",id:"how-to-write-your-functions",level:2},{value:"Example 1 (Valid)",id:"example-1-valid",level:3},{value:"Example 2 (Invalid)",id:"example-2-invalid",level:3},{value:"Do You have to return something",id:"do-you-have-to-return-something",level:4},{value:"Adding nested functions",id:"adding-nested-functions",level:3},{value:"Node structure",id:"node-structure",level:2},{value:"Dynamic variables support",id:"dynamic-variables-support",level:2}],u={toc:d},c="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"functions"},"Functions"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"The Functions node allows you to add your own code to your flows."),(0,a.kt)("p",null,"You can write your functions in ",(0,a.kt)("inlineCode",{parentName:"p"},"Javacsript")," and It will be excuted inside an isolated\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"async function"),"\xa0that supports using ",(0,a.kt)("a",{parentName:"p",href:"/getting-started/dynamic-variables"},"Dynamic variables"),"."),(0,a.kt)("h3",{id:"how-this-node-works"},"How this node works"),(0,a.kt)("p",null,"this node will run the code you write as an isolated ",(0,a.kt)("inlineCode",{parentName:"p"},"Javascript async function"),". You can use it to run custom operations or to ",(0,a.kt)("inlineCode",{parentName:"p"},"return")," something to save as the node's response so it can be accessible from any other node using the following syntax:\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"koxy.res.{NODE_NAME}"),"."),(0,a.kt)("h3",{id:"add-this-node-to-your-flowdirect-link-to-add-this-node-to-your-flow"},"Add this node to your flow",(0,a.kt)("a",{parentName:"h3",href:"http://localhost:3000/getting-started/nodes/core/http-client#add-this-node-to-your-flow",title:"Direct link to Add this node to your flow"},"\u200b")),(0,a.kt)("p",null,"To add this node to your flow you should open the nodes list. check the\xa0",(0,a.kt)("a",{parentName:"p",href:"http://localhost:3000/getting-started/flows-builder"},"flows builder documentation"),"\xa0to learn more, and then You should fill the following properties:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"name:"),"\xa0node names should be unique and can't be changed."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"function:")," write your code in ",(0,a.kt)("inlineCode",{parentName:"li"},"Javascript"),". see ",(0,a.kt)("a",{parentName:"li",href:"##how-to-write-your-functions"},"how to write your functions")," for more information."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Next:"),"\xa0the trigger that the node should call after sending the request. click on the\xa0",(0,a.kt)("inlineCode",{parentName:"li"},"next input"),"\xa0to get a list of available triggers.")),(0,a.kt)("h2",{id:"how-to-write-your-functions"},"How to write your functions"),(0,a.kt)("p",null,"To write code in the Functions node, you can use the same syntax as you would use in a regular ",(0,a.kt)("inlineCode",{parentName:"p"},"JavaScript\xa0async function"),". "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"You don't write the function itself.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"You only write the code/content of the function."))),(0,a.kt)("h3",{id:"example-1-valid"},"Example 1 (Valid)"),(0,a.kt)("ul",{className:"contains-task-list"},(0,a.kt)("li",{parentName:"ul",className:"task-list-item"},(0,a.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," "," Valid code")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'const data = await fetch("https://api.github.com/search/koxy.get.{searchKeyword}");\ndata = await data.json();\n\nreturn data;\n')),(0,a.kt)("h3",{id:"example-2-invalid"},"Example 2 (Invalid)"),(0,a.kt)("ul",{className:"contains-task-list"},(0,a.kt)("li",{parentName:"ul",className:"task-list-item"},(0,a.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," "," Invalid code")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'async function () {\n    const data = await fetch("https://api.github.com/search/K_GET.{searchKeyword}");\n\xa0\xa0\xa0\xa0data = await data.json();\n\n\xa0\xa0\xa0\xa0return data;\n}\n')),(0,a.kt)("p",null,"The above example will save the ",(0,a.kt)("inlineCode",{parentName:"p"},"data")," as the node's response."),(0,a.kt)("h4",{id:"do-you-have-to-return-something"},"Do You have to return something"),(0,a.kt)("p",null,"No, You don't have to return something, You can use the functions node to do any operation that our nodes are not capable of."),(0,a.kt)("h3",{id:"adding-nested-functions"},"Adding nested functions"),(0,a.kt)("p",null,"Adding nested functions is possible, but however it's now recommended. We recommend adding multiple functions nodes instead."),(0,a.kt)("h2",{id:"node-structure"},"Node structure"),(0,a.kt)("p",null,"An example of this node's structure would be something like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'function1: {\n    type: "function",\n    icon: "code_blocks",\n    function: YOUR_FUNCTION,\n    next: "stop",\n    x: 0,\n    y: 0\n}\n')),(0,a.kt)("h2",{id:"dynamic-variables-support"},"Dynamic variables support"),(0,a.kt)("p",null,"You can use\xa0",(0,a.kt)("a",{parentName:"p",href:"http://localhost:3000/getting-started/dynamic-variables"},"Dynamic variables"),"\xa0in the following properties:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"function.")))}p.isMDXComponent=!0}}]);