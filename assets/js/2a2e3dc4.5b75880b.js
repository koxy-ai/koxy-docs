"use strict";(self.webpackChunkkoxy_docs=self.webpackChunkkoxy_docs||[]).push([[82],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),k=r,h=d["".concat(p,".").concat(k)]||d[k]||m[k]||o;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=k;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},4961:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:2,description:"Send HTTP requests",slug:"/nodes/core/http-client"},i="HTTP Client",l={unversionedId:"nodes/core/HTTP client",id:"nodes/core/HTTP client",title:"HTTP Client",description:"Send HTTP requests",source:"@site/docs/nodes/core/HTTP client.md",sourceDirName:"nodes/core",slug:"/nodes/core/http-client",permalink:"/koxy-docs/nodes/core/http-client",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"Send HTTP requests",slug:"/nodes/core/http-client"},sidebar:"tutorialSidebar",previous:{title:"Boolean Conditions",permalink:"/koxy-docs/nodes/core/conditions"},next:{title:"Sleep (timer)",permalink:"/koxy-docs/nodes/core/delay"}},p={},s=[{value:"Intro",id:"intro",level:2},{value:"How this node works",id:"how-this-node-works",level:2},{value:"How to use this node response",id:"how-to-use-this-node-response",level:2},{value:"Node properties",id:"node-properties",level:2},{value:"Valid body",id:"valid-body",level:2},{value:"Example",id:"example",level:2},{value:"Dynamic variables support",id:"dynamic-variables-support",level:2}],u={toc:s},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"http-client"},"HTTP Client"),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"intro"},"Intro"),(0,r.kt)("p",null,"The HTTP node allows you to send ",(0,r.kt)("inlineCode",{parentName:"p"},"http")," requests to any 3rd-party service or API you want."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"how-this-node-works"},"How this node works"),(0,r.kt)("p",null,"this node will simply send an ",(0,r.kt)("inlineCode",{parentName:"p"},"http")," request to the desired url and it will save the response so it can be accessible from any other node using the following syntax: ",(0,r.kt)("inlineCode",{parentName:"p"},"koxy.res.{NODE_NAME}"),"."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"how-to-use-this-node-response"},"How to use this node response"),(0,r.kt)("p",null,"You can use the node response from any other node using the ",(0,r.kt)("inlineCode",{parentName:"p"},"koxy.res.{NODE_NAME}")," as described above, and if the response is a JSON object you can get the nested values like this (example): ",(0,r.kt)("inlineCode",{parentName:"p"},"koxy.res.{githubsearch.items.0.login}")," (this will be the value of the first item's login in the items list)."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"node-properties"},"Node properties"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"name:")," node names should be unique and can't be changed.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Host url:")," the url you want to send the request to.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Request method:")," the method of the request you want to send. can be one of these values:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"GET"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"POST"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"PUT"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"PATCH"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"DELETE"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Headers:")," set your request headers. you can simply add headers by entring the header's key and value and click on ",(0,r.kt)("strong",{parentName:"p"},"Add headers"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Parameters:")," set your request parameters using this syntax: ",(0,r.kt)("inlineCode",{parentName:"p"},"q=multineon&page=2"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Body:")," set the request body in any format you want. remember that the request body can't be used with ",(0,r.kt)("inlineCode",{parentName:"p"},"GET")," requests and will throw an error.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Next:")," the trigger that the node should call after sending the request. click on the\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"next input"),"\xa0to get a list of available triggers."))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"valid-body"},"Valid body"),(0,r.kt)("p",null,"We left this for you because of the fact that you might use any ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-type")," in your headers, so you should set your body based on what your ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-type")," header is."),(0,r.kt)("p",null,"For example if you want to send your body's data and your ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-type")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"application/json")," you would do it like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'\'{"data": "this is data to be sent"}\'\n')),(0,r.kt)("p",null,"but if you want to send a request using the ",(0,r.kt)("inlineCode",{parentName:"p"},"x-www-form-urlencoded")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-type")," your body value should be something like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"data=this is data&data2=this is data2\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"Please note that we are not an affliate with ",(0,r.kt)("a",{parentName:"p",href:"https://github.com"},"Github")," and this is just an example of how you would use the ",(0,r.kt)("strong",{parentName:"p"},"HTTP Client")," node."),(0,r.kt)("p",null,"in this example we will send a ",(0,r.kt)("inlineCode",{parentName:"p"},"GET")," request to ",(0,r.kt)("a",{parentName:"p",href:"https://api.github.com/search/users"},"https://api.github.com/search/users")," and search for ",(0,r.kt)("inlineCode",{parentName:"p"},"github")," itself :)"),(0,r.kt)("p",null,"So first you need to give your node a name, in this example We will name it\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"github1"),"."),(0,r.kt)("p",null,"We will set the ",(0,r.kt)("strong",{parentName:"p"},"Host url")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"https://api.github.com/search/users")," and the request method as ",(0,r.kt)("inlineCode",{parentName:"p"},"GET")," because We are sending a ",(0,r.kt)("inlineCode",{parentName:"p"},"GET")," request."),(0,r.kt)("p",null,"Now let's set our headers:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"We will add one header like this:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Header's key: ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-Type"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Header's value: ",(0,r.kt)("inlineCode",{parentName:"p"},"application/json"),"."))))),(0,r.kt)("p",null,"It's time to set our parameters (Remember we can't set a body because We are sending a ",(0,r.kt)("inlineCode",{parentName:"p"},"GET")," request):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"We will set our parameters as ",(0,r.kt)("inlineCode",{parentName:"p"},"q=github"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"We will leave the request ",(0,r.kt)("strong",{parentName:"p"},"body")," empty."))),(0,r.kt)("p",null,"And We will set the ",(0,r.kt)("inlineCode",{parentName:"p"},"next trigger")," to be ",(0,r.kt)("strong",{parentName:"p"},"stop")," so we can see what we've done so far and test if our flow is working."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"dynamic-variables-support"},"Dynamic variables support"),(0,r.kt)("p",null,"You can use ",(0,r.kt)("a",{parentName:"p",href:"/getting-started/dynamic-variables"},"Dynamic variables")," in the following properties:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"host url.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"headers.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"parameters.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"body."))))}m.isMDXComponent=!0}}]);