"use strict";(self.webpackChunkkoxy_docs=self.webpackChunkkoxy_docs||[]).push([[2488],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>b});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},v=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(a),v=n,b=u["".concat(s,".").concat(v)]||u[v]||d[v]||o;return a?r.createElement(b,i(i({ref:t},p),{},{components:a})):r.createElement(b,i({ref:t},p))}));function b(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=v;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:n,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}v.displayName="MDXCreateElement"},6330:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));const o={sidebar_position:4,description:"Save a variable that can be easily accessed later in your endpoint",slug:"/nodes/core/create-variable"},i="Create variable",l={unversionedId:"nodes/core/Create variable",id:"nodes/core/Create variable",title:"Create variable",description:"Save a variable that can be easily accessed later in your endpoint",source:"@site/docs/nodes/core/Create variable.md",sourceDirName:"nodes/core",slug:"/nodes/core/create-variable",permalink:"/koxy-docs/nodes/core/create-variable",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"Save a variable that can be easily accessed later in your endpoint",slug:"/nodes/core/create-variable"},sidebar:"tutorialSidebar",previous:{title:"Sleep (timer)",permalink:"/koxy-docs/nodes/core/delay"},next:{title:"Status code",permalink:"/koxy-docs/nodes/core/change-status"}},s={},c=[{value:"Intro",id:"intro",level:2},{value:"How this node works",id:"how-this-node-works",level:2},{value:"Node properties",id:"node-properties",level:2},{value:"Dynamic variables support",id:"dynamic-variables-support",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"create-variable"},"Create variable"),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"intro"},"Intro"),(0,n.kt)("p",null,"Using this node you can save a variable that can be easily accessed and updated later in your endpoint using the following syntax: ",(0,n.kt)("inlineCode",{parentName:"p"},"koxy.var.{var_name}"),"."),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"how-this-node-works"},"How this node works"),(0,n.kt)("p",null,"This node will take the variable you give it and save it as a key-value in the memory, so the variable can be accessed later from any node property that supports using dynamic variables using the ",(0,n.kt)("inlineCode",{parentName:"p"},"koxy.var.{var_name}")," syntax where ",(0,n.kt)("inlineCode",{parentName:"p"},"var_name")," is the key of the variable. if a variable with the giving key already exist its value will be updated with the new one."),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"node-properties"},"Node properties"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"name"),": Node names should be unique and can't be changed.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Variable key"),": The name or key of the variable that can be used later to access or update it.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Variable value"),": The value of the variable to be saved. this can be any type of data such as strings, numbers, and boolean values but however arrays and objects are not recommended yet.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Next"),": The action that will be triggered after saving the variable. click on the next input to get a list of available triggers."))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"dynamic-variables-support"},"Dynamic variables support"),(0,n.kt)("p",null,"You can use Dynamic variables in the following properties:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Variable value.")))}d.isMDXComponent=!0}}]);